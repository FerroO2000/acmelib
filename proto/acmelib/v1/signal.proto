syntax = "proto3";

package acmelib.v1;

import "acmelib/v1/entity.proto";
import "acmelib/v1/signal_type.proto";
import "acmelib/v1/signal_unit.proto";
import "acmelib/v1/signal_enum.proto";
import "acmelib/v1/signal_payload.proto";

enum SignalKind {
    SIGNAL_KIND_UNSPECIFIED = 0;
    SIGNAL_KIND_STANDARD = 1;
    SIGNAL_KIND_ENUM = 2;
    SIGNAL_KIND_MULTIPLEXER = 3;
}

enum SignalSendType {
    SIGNAL_SEND_TYPE_UNSPECIFIED = 0;
    SIGNAL_SEND_TYPE_CYCLIC = 1;
    SIGNAL_SEND_TYPE_ON_WRITE = 2;
    SIGNAL_SEND_TYPE_ON_WRITE_WITH_REPETITION = 3;
    SIGNAL_SEND_TYPE_ON_CHANGE = 4;
    SIGNAL_SEND_TYPE_ON_CHANGE_WITH_REPETITION = 5;
    SIGNAL_SEND_TYPE_IF_ACTIVE = 6;
    SIGNAL_SEND_TYPE_IF_ACTIVE_WITH_REPETITION = 7;
}

message Signal {
    acmelib.v1.Entity entity = 1;

    SignalKind kind = 2;
    SignalSendType send_type = 3;
    double start_value = 4;

    oneof signal {
        StandardSignal standard = 5;
        EnumSignal enum = 6;
        MultiplexerSignal multiplexer = 7;
    }
}

message StandardSignal {
    oneof type {
        acmelib.v1.SignalType embedded_type = 1;
        string type_entity_id = 2;
    }
    
    oneof unit {
        acmelib.v1.SignalUnit embedded_unit = 3;
        string unit_entity_id = 4;
    }
}

message EnumSignal {
    oneof enum{
        acmelib.v1.SignalEnum embedded_enum = 1;
        string enum_entity_id = 2;
    }
}

message MultiplexerSignal {
    repeated Signal signals = 1;
    repeated string fixed_signal_entity_ids = 2;

    uint32 group_count = 3;
    uint32 group_size = 4;

    repeated acmelib.v1.SignalPayload groups = 5;
}

